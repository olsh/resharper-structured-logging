plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.jetbrains.intellij' version '1.9.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
buildDir = 'gradle-build'
version = ext.PluginVersion

compileKotlin {
    kotlinOptions { jvmTarget = "1.8" }
}

intellij {
    type = 'RD'
    version = "${ProductVersion}"
    downloadSources = false
    instrumentCode = false
}

sourceSets {
    main {
        java.srcDir 'src/rider/main/kotlin'
        resources.srcDir 'src/rider/main/resources'
    }
}

repositories {
    maven { url 'https://cache-redirector.jetbrains.com/intellij-repository/snapshots' }
    maven { url 'https://cache-redirector.jetbrains.com/maven-central' }
}

prepareSandbox {
    def dotNetFiles = [
            "${DotNetOutputDirectory}/${DotNetProjectName}.dll",
            "${DotNetOutputDirectory}/${DotNetProjectName}.pdb",
    ]

    dotNetFiles.forEach({ f ->
        def file = file(f)
        from(file, { into "${rootProject.name}/dotnet" })
    })

    doLast {
        dotNetFiles.forEach({ f ->
            def file = file(f)
            if (!file.exists()) throw new RuntimeException("File ${file} does not exist")
        })
    }
}

wrapper {
    gradleVersion = '7.4.2'
    distributionType = Wrapper.DistributionType.ALL
    distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
